version: '3.8'

services:
  # Redis - Token storage and caching
  redis:
    image: redis:7-alpine
    container_name: oauth-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - oauth-network

  # Auth Server - OAuth2/OIDC Authorization Server
  auth-server:
    build:
      context: ./auth-server
      dockerfile: Dockerfile
    container_name: oauth-auth-server
    ports:
      - "9000:9000"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SERVER_PORT=9000
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - oauth-network

  # API Gateway - Spring Cloud Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: oauth-api-gateway
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATA_REDIS_HOST=redis
      - SPRING_DATA_REDIS_PORT=6379
      - SERVER_PORT=8080
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI=http://localhostr:9000
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://localhost:9000/oauth2/jwks
    depends_on:
      redis:
        condition: service_healthy
      auth-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - oauth-network

  # Admin Service - Admin Management API
  admin-service:
    build:
      context: ./admin-service
      dockerfile: Dockerfile
    container_name: oauth-admin-service
    ports:
      - "8083:8083"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8083
    depends_on:
      api-gateway:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - oauth-network

  # User Service - User Management API
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: oauth-user-service
    ports:
      - "8084:8084"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SERVER_PORT=8084
    depends_on:
      api-gateway:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - oauth-network

  # React Frontend - OAuth UI
  oauth-ui:
    build:
      context: ./oauth-ui
      dockerfile: Dockerfile
    container_name: oauth-ui
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:3000
    depends_on:
      api-gateway:
        condition: service_healthy
      auth-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - oauth-network

volumes:
  redis_data:
    driver: local

networks:
  oauth-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 